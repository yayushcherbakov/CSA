#ifndef __container__
#define __container__

//------------------------------------------------------------------------------
// container.h - класс,
// представляющий простейший контейнер
//------------------------------------------------------------------------------

#include "plant.h"
#include <iostream>
#include <fstream>
#include "tree.h"
#include "flower.h"
#include "shrub.h"
#include "rnd.h"

//------------------------------------------------------------------------------
// Простейший контейнер на основе одномерного массива
class Container {
public:

	// Создание пустого контейнера
	Container();

	// Создание контейнера из указанного потока
	Container(std::ifstream& ifst);

	// Создание контейнера определенного размера со случайными значениями
	Container(int size);

	// Вывод содержимого контейнера в указанный поток
	void Out(std::ofstream& ofst);

	// Получение количества элементов в контейнере
	int GetLenght();

	// Быстрая сортировка массива растений, которые находятся в контейнере
	void QuickSort();

private:
	// максимальная длина
	static const int max_len = 10000;
	// текущая длина
	int lenght;
	Plant** plants;

	// Быстрая сортировка массива растений с указанием границ сортировки
	void QuickSort(Plant* arr[], int low, int high);

	// Выбираем крайний правый элемент как опорный.
	// Разбиение: перераспределение элементов в массиве таким образом,
	// что элементы, меньшие опорного, помещаются перед ним, а большие или равные - после.
	int Partition(Plant* arr[], int low, int high);

	// Перестановка обьектов местами
	void Swap(Plant** a, Plant** b);
};

#endif
